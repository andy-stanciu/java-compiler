Scanning QuickSort.java...
CLASS ID(QuickSort) LCURL PUBLIC STATIC VOID MAIN LPAREN STRING LSQUARE RSQUARE ID(a) RPAREN LCURL PRINT LPAREN NEW ID(QS) LPAREN RPAREN DOT ID(Start) LPAREN INT(10) RPAREN RPAREN SEMICOLON RCURL RCURL CLASS ID(QS) LCURL INT LSQUARE RSQUARE ID(number) SEMICOLON INT ID(size) SEMICOLON PUBLIC INT ID(Start) LPAREN INT ID(sz) RPAREN LCURL INT ID(aux01) SEMICOLON ID(aux01) EQUALS THIS DOT ID(Init) LPAREN ID(sz) RPAREN SEMICOLON ID(aux01) EQUALS THIS DOT ID(Print) LPAREN RPAREN SEMICOLON PRINT LPAREN INT(9999) RPAREN SEMICOLON ID(aux01) EQUALS ID(size) MINUS INT(1) SEMICOLON ID(aux01) EQUALS THIS DOT ID(Sort) LPAREN INT(0) COMMA ID(aux01) RPAREN SEMICOLON ID(aux01) EQUALS THIS DOT ID(Print) LPAREN RPAREN SEMICOLON RETURN INT(0) SEMICOLON RCURL PUBLIC INT ID(Sort) LPAREN INT ID(left) COMMA INT ID(right) RPAREN LCURL INT ID(v) SEMICOLON INT ID(i) SEMICOLON INT ID(j) SEMICOLON INT ID(nt) SEMICOLON INT ID(t) SEMICOLON BOOLEAN ID(cont01) SEMICOLON BOOLEAN ID(cont02) SEMICOLON INT ID(aux03) SEMICOLON ID(t) EQUALS INT(0) SEMICOLON IF LPAREN ID(left) LESS_THAN ID(right) RPAREN LCURL ID(v) EQUALS ID(number) LSQUARE ID(right) RSQUARE SEMICOLON ID(i) EQUALS ID(left) MINUS INT(1) SEMICOLON ID(j) EQUALS ID(right) SEMICOLON ID(cont01) EQUALS TRUE SEMICOLON WHILE LPAREN ID(cont01) RPAREN LCURL ID(cont02) EQUALS TRUE SEMICOLON WHILE LPAREN ID(cont02) RPAREN LCURL ID(i) EQUALS ID(i) PLUS INT(1) SEMICOLON ID(aux03) EQUALS ID(number) LSQUARE ID(i) RSQUARE SEMICOLON IF LPAREN NOT LPAREN ID(aux03) LESS_THAN ID(v) RPAREN RPAREN ID(cont02) EQUALS FALSE SEMICOLON ELSE ID(cont02) EQUALS TRUE SEMICOLON RCURL ID(cont02) EQUALS TRUE SEMICOLON WHILE LPAREN ID(cont02) RPAREN LCURL ID(j) EQUALS ID(j) MINUS INT(1) SEMICOLON ID(aux03) EQUALS ID(number) LSQUARE ID(j) RSQUARE SEMICOLON IF LPAREN NOT LPAREN ID(v) LESS_THAN ID(aux03) RPAREN RPAREN ID(cont02) EQUALS FALSE SEMICOLON ELSE ID(cont02) EQUALS TRUE SEMICOLON RCURL ID(t) EQUALS ID(number) LSQUARE ID(i) RSQUARE SEMICOLON ID(number) LSQUARE ID(i) RSQUARE EQUALS ID(number) LSQUARE ID(j) RSQUARE SEMICOLON ID(number) LSQUARE ID(j) RSQUARE EQUALS ID(t) SEMICOLON IF LPAREN ID(j) LESS_THAN LPAREN ID(i) PLUS INT(1) RPAREN RPAREN ID(cont01) EQUALS FALSE SEMICOLON ELSE ID(cont01) EQUALS TRUE SEMICOLON RCURL ID(number) LSQUARE ID(j) RSQUARE EQUALS ID(number) LSQUARE ID(i) RSQUARE SEMICOLON ID(number) LSQUARE ID(i) RSQUARE EQUALS ID(number) LSQUARE ID(right) RSQUARE SEMICOLON ID(number) LSQUARE ID(right) RSQUARE EQUALS ID(t) SEMICOLON ID(nt) EQUALS THIS DOT ID(Sort) LPAREN ID(left) COMMA ID(i) MINUS INT(1) RPAREN SEMICOLON ID(nt) EQUALS THIS DOT ID(Sort) LPAREN ID(i) PLUS INT(1) COMMA ID(right) RPAREN SEMICOLON RCURL ELSE ID(nt) EQUALS INT(0) SEMICOLON RETURN INT(0) SEMICOLON RCURL PUBLIC INT ID(Print) LPAREN RPAREN LCURL INT ID(j) SEMICOLON ID(j) EQUALS INT(0) SEMICOLON WHILE LPAREN ID(j) LESS_THAN LPAREN ID(size) RPAREN RPAREN LCURL PRINT LPAREN ID(number) LSQUARE ID(j) RSQUARE RPAREN SEMICOLON ID(j) EQUALS ID(j) PLUS INT(1) SEMICOLON RCURL RETURN INT(0) SEMICOLON RCURL PUBLIC INT ID(Init) LPAREN INT ID(sz) RPAREN LCURL ID(size) EQUALS ID(sz) SEMICOLON ID(number) EQUALS NEW INT LSQUARE ID(sz) RSQUARE SEMICOLON ID(number) LSQUARE INT(0) RSQUARE EQUALS INT(20) SEMICOLON ID(number) LSQUARE INT(1) RSQUARE EQUALS INT(7) SEMICOLON ID(number) LSQUARE INT(2) RSQUARE EQUALS INT(12) SEMICOLON ID(number) LSQUARE INT(3) RSQUARE EQUALS INT(18) SEMICOLON ID(number) LSQUARE INT(4) RSQUARE EQUALS INT(2) SEMICOLON ID(number) LSQUARE INT(5) RSQUARE EQUALS INT(11) SEMICOLON ID(number) LSQUARE INT(6) RSQUARE EQUALS INT(6) SEMICOLON ID(number) LSQUARE INT(7) RSQUARE EQUALS INT(9) SEMICOLON ID(number) LSQUARE INT(8) RSQUARE EQUALS INT(19) SEMICOLON ID(number) LSQUARE INT(9) RSQUARE EQUALS INT(5) SEMICOLON RETURN INT(0) SEMICOLON RCURL RCURL
