Extra stuff:
A lot of extra stuff was included. These are discussed in significantly more detail
in the project report, but at a high level, we added:
- Better assignment: assignment to qualified identifiers, generalized assignment to
  assign to any location that should be assignable really
- All assignment operators: +=, -=, *=, /=, %=, &=, |=, ^=, <<=, >>=, >>>=
- Post/pre increment/decrement operators: ++i, --i, i++, i--
- The rest of the operators that exist in Java: /, %, &, |, ^, ~, <<, >>, >>>, <=, >, >=, ||, ==, !=
- Field access, i.e. obj.obj2.obj3.a = 1; or a statement as simple as this.x = 1;
- Instanceof operator
- Ternary expressions

Clever code generation strategies:
Nothing too special. Stored the size of arrays in the first 8 bytes and used xor
in a not expression, but I think these are both necessary to do...

Project status:
Everything is working (we hope!). No major surprises, though we decided to include a
semantics check for > 5 parameters for methods since the generated code would
produce undefined behavior otherwise since we don't support pushing overflow arguments
on the stack.

Workload:
The work for this part of the project was once again completed synchronously and in
person. Andy wrote about the first half of the code gen visitor, and I finished up the
rest of it and started writing tests. The work was pretty evenly split, and we spent
a decent amount of time debugging arrays in GDB.

