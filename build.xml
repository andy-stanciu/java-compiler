<project name="java-compiler" default="compile">

  <!-- build targets for compiler -->

  <target name="init">
    <mkdir dir="build/classes" />
  </target>

  <target name="clean">
    <delete dir="build"/>
    <delete file="src/parser/parser.java"/>
    <delete file="src/parser/sym.java"/>
    <delete file="src/scanner/scanner.java"/>
    <delete file="src/scanner/scanner.java~"/>
  </target>

  <target name="check.parse.files">
    <uptodate targetfile="src/parser/parser.java"
	      srcfile="src/parser/java.cup"
	      property="parser.uptodate"/>
    <uptodate targetfile="src/scanner/scanner.java"
	      srcfile="src/scanner/java.jflex"
	      property="scanner.uptodate"/>
    <condition property="scanner.parser.uptodate">
      <and>
	<isset property="scanner.uptodate"/>
	<isset property="parser.uptodate"/>
      </and>
    </condition>
  </target>

  <target name="gen-parser" depends="check.parse.files"
	  unless="parser.uptodate">
    <java jar="lib/java-cup-11b.jar" fork="true" failonerror="true"
	  output="build/cup.out">
      <arg value="-locations"/>
      <arg value="-dump_states"/>
      <arg value="-dump_grammar"/>
      <arg value="-dump_tables"/>
      <arg value="-destdir"/> <arg value="src/parser"/>
      <arg value="src/parser/java.cup"/>
    </java>
  </target>

  <target name="gen-scanner" depends="gen-parser, check.parse.files"
	  unless="scanner.parser.uptodate">
    <java classname="jflex.Main" classpath="lib/jflex-full-1.8.2.jar"
	  fork="true" failonerror="true">
      <arg value="src/scanner/java.jflex"/>
    </java>
  </target>

<!-- Remove comment on compilerarg line below to generate compiler warnings
     for unchecked casts.  Even if the java code is clean, there may be
     warnings in java code generated by cup. -->

  <target name="compile" depends="init, gen-scanner">
    <javac srcdir="src" destdir="build/classes" classpath="lib/java-cup-11b.jar"
           debug="true"
           includeAntRuntime="false">
      <!-- <compilerarg value="-Xlint:unchecked"/> -->
    </javac>
  </target>

  <!-- targets for running test cases... -->

  <target name="compile-test" depends="compile">
    <javac srcdir="test/utils" destdir="build/classes"
           classpath="lib/hamcrest-core-1.3.jar;lib/junit-4.12.jar;lib/java-cup-11b.jar"
           debug="true"
           includeAntRuntime="false">
    </javac>
    <javac srcdir="test/junit" destdir="build/classes"
           classpath="lib/hamcrest-core-1.3.jar;lib/junit-4.12.jar;lib/java-cup-11b.jar"
           debug="true"
           includeAntRuntime="false">
    </javac>
  </target>

  <!-- run all JUnit tests in the test/junit subdirectory -->
  <!-- this target runs all tests in test/junit, but you may find it easier 
       to break things up, e.g. by portion of the project.  to do so, copy
       this target as needed and modify the <fileset> tag to <include> only
       the test files you want. -->

  <target name="test" depends="compile-test">
    <junit fork="yes">
      <jvmarg value="-Djava.security.manager=allow"/>
      <classpath>
      <pathelement location="build/classes" />   
      <pathelement location="lib/hamcrest-core-1.3.jar"/> 
      <pathelement location="lib/junit-4.12.jar"/>
      <pathelement location="lib/java-cup-11b.jar"/>
    </classpath>
    <batchtest>
       <fileset dir="test/junit">
            <include name="**/*.java" />
       </fileset>
    </batchtest>
    <formatter type="plain" usefile="false"/>
    </junit>
  </target>

</project>
